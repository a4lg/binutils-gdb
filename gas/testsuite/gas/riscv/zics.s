target:
	## Additional conditional branches
	beqi	a0, 15, target
	beqi	a0, -16, .
	bnei	a0, 15, target
	bnei	a0, -16, .

	## Pair moves
	mvp0	a0,  a1,  t0, t1
	mvp0	x10, x11, t0, t1
	mvp2	a2,  a3,  t0, t1
	mvp2	x12, x13, t0, t1

	## Register-immediate addressing (with pre/post update)
	lb	a0, (+a1)
	lb	a0, (a1+)
	lb	a0, 15(+a1)
	lb	a0, 15(a1+)
	lb	a0, -16(+a1)
	lb	a0, -16(a1+)
	lbu	a0, (+a1)
	lbu	a0, (a1+)
	lbu	a0, 15(+a1)
	lbu	a0, 15(a1+)
	lbu	a0, -16(+a1)
	lbu	a0, -16(a1+)
	lh	a0, (+a1)
	lh	a0, (a1+)
	lh	a0, 30(+a1)
	lh	a0, 30(a1+)
	lh	a0, -32(+a1)
	lh	a0, -32(a1+)
	lhu	a0, (+a1)
	lhu	a0, (a1+)
	lhu	a0, 30(+a1)
	lhu	a0, 30(a1+)
	lhu	a0, -32(+a1)
	lhu	a0, -32(a1+)
	lw	a0, (+a1)
	lw	a0, (a1+)
	lw	a0, 60(+a1)
	lw	a0, 60(a1+)
	lw	a0, -64(+a1)
	lw	a0, -64(a1+)
	sb	a0, (+a1)
	sb	a0, (a1+)
	sb	a0, 15(+a1)
	sb	a0, 15(a1+)
	sb	a0, -16(+a1)
	sb	a0, -16(a1+)
	sh	a0, (+a1)
	sh	a0, (a1+)
	sh	a0, 30(+a1)
	sh	a0, 30(a1+)
	sh	a0, -32(+a1)
	sh	a0, -32(a1+)
	sw	a0, (+a1)
	sw	a0, (a1+)
	sw	a0, 60(+a1)
	sw	a0, 60(a1+)
	sw	a0, -64(+a1)
	sw	a0, -64(a1+)

	## Register-register addressing (with optional pre/post update), non-scaled
	lb	a0, a2(a1)
	lb	a0, a2(+a1)
	lb	a0, a2(a1+)
	lbu	a0, a2(a1)
	lbu	a0, a2(+a1)
	lbu	a0, a2(a1+)
	lh	a0, a2(a1)
	lh	a0, a2(+a1)
	lh	a0, a2(a1+)
	lhu	a0, a2(a1)
	lhu	a0, a2(+a1)
	lhu	a0, a2(a1+)
	lw	a0, a2(a1)
	lw	a0, a2(+a1)
	lw	a0, a2(a1+)
	sb	a0, a2(a1)
	sb	a0, a2(+a1)
	sb	a0, a2(a1+)
	sh	a0, a2(a1)
	sh	a0, a2(+a1)
	sh	a0, a2(a1+)
	sw	a0, a2(a1)
	sw	a0, a2(+a1)
	sw	a0, a2(a1+)
	# rd == rs1 is valid on stores and no update load variants
	lb	a0, a2(a0)
	lbu	a0, a2(a0)
	lh	a0, a2(a0)
	lhu	a0, a2(a0)
	lw	a0, a2(a0)
	sb	a0, a2(a0)
	sb	a0, a2(+a0)
	sb	a0, a2(a0+)
	sh	a0, a2(a0)
	sh	a0, a2(+a0)
	sh	a0, a2(a0+)
	sw	a0, a2(a0)
	sw	a0, a2(+a0)
	sw	a0, a2(a0+)

	## Register-register addressing (with optional pre/post update), scaled
	# lb/lbu/sb are pseudoinstructions to non-scaled variants.
	lb	a0, [a2](a1)
	lb	a0, [a2](+a1)
	lb	a0, [a2](a1+)
	lbu	a0, [a2](a1)
	lbu	a0, [a2](+a1)
	lbu	a0, [a2](a1+)
	lh	a0, [a2](a1)
	lh	a0, [a2](+a1)
	lh	a0, [a2](a1+)
	lhu	a0, [a2](a1)
	lhu	a0, [a2](+a1)
	lhu	a0, [a2](a1+)
	lw	a0, [a2](a1)
	lw	a0, [a2](+a1)
	lw	a0, [a2](a1+)
	sb	a0, [a2](a1)
	sb	a0, [a2](+a1)
	sb	a0, [a2](a1+)
	sh	a0, [a2](a1)
	sh	a0, [a2](+a1)
	sh	a0, [a2](a1+)
	sw	a0, [a2](a1)
	sw	a0, [a2](+a1)
	sw	a0, [a2](a1+)
	# rd == rs1 is valid on stores and no update load variants
	lb	a0, [a2](a0)
	lbu	a0, [a2](a0)
	lh	a0, [a2](a0)
	lhu	a0, [a2](a0)
	lw	a0, [a2](a0)
	sb	a0, [a2](a0)
	sb	a0, [a2](+a0)
	sb	a0, [a2](a0+)
	sh	a0, [a2](a0)
	sh	a0, [a2](+a0)
	sh	a0, [a2](a0+)
	sw	a0, [a2](a0)
	sw	a0, [a2](+a0)
	sw	a0, [a2](a0+)

	## Pair load/stores
	lbp	a0, a1, (sp)
	lbp	a0, a1, (+sp)
	lbp	a0, a1, (sp+)
	lbp	a0, a1, 15(sp)
	lbp	a0, a1, 15(+sp)
	lbp	a0, a1, 15(sp+)
	lbp	a0, a1, -16(sp)
	lbp	a0, a1, -16(+sp)
	lbp	a0, a1, -16(sp+)
	lbup	a0, a1, (sp)
	lbup	a0, a1, (+sp)
	lbup	a0, a1, (sp+)
	lbup	a0, a1, 15(sp)
	lbup	a0, a1, 15(+sp)
	lbup	a0, a1, 15(sp+)
	lbup	a0, a1, -16(sp)
	lbup	a0, a1, -16(+sp)
	lbup	a0, a1, -16(sp+)
	lhp	a0, a1, (sp)
	lhp	a0, a1, (+sp)
	lhp	a0, a1, (sp+)
	lhp	a0, a1, 30(sp)
	lhp	a0, a1, 30(+sp)
	lhp	a0, a1, 30(sp+)
	lhp	a0, a1, -32(sp)
	lhp	a0, a1, -32(+sp)
	lhp	a0, a1, -32(sp+)
	lhup	a0, a1, (sp)
	lhup	a0, a1, (+sp)
	lhup	a0, a1, (sp+)
	lhup	a0, a1, 30(sp)
	lhup	a0, a1, 30(+sp)
	lhup	a0, a1, 30(sp+)
	lhup	a0, a1, -32(sp)
	lhup	a0, a1, -32(+sp)
	lhup	a0, a1, -32(sp+)
	lwp	a0, a1, (sp)
	lwp	a0, a1, (+sp)
	lwp	a0, a1, (sp+)
	lwp	a0, a1, 60(sp)
	lwp	a0, a1, 60(+sp)
	lwp	a0, a1, 60(sp+)
	lwp	a0, a1, -64(sp)
	lwp	a0, a1, -64(+sp)
	lwp	a0, a1, -64(sp+)
	sbp	a0, a1, (sp)
	sbp	a0, a1, (+sp)
	sbp	a0, a1, (sp+)
	sbp	a0, a1, 15(sp)
	sbp	a0, a1, 15(+sp)
	sbp	a0, a1, 15(sp+)
	sbp	a0, a1, -16(sp)
	sbp	a0, a1, -16(+sp)
	sbp	a0, a1, -16(sp+)
	shp	a0, a1, (sp)
	shp	a0, a1, (+sp)
	shp	a0, a1, (sp+)
	shp	a0, a1, 30(sp)
	shp	a0, a1, 30(+sp)
	shp	a0, a1, 30(sp+)
	shp	a0, a1, -32(sp)
	shp	a0, a1, -32(+sp)
	shp	a0, a1, -32(sp+)
	swp	a0, a1, (sp)
	swp	a0, a1, (+sp)
	swp	a0, a1, (sp+)
	swp	a0, a1, 60(sp)
	swp	a0, a1, 60(+sp)
	swp	a0, a1, 60(sp+)
	swp	a0, a1, -64(sp)
	swp	a0, a1, -64(+sp)
	swp	a0, a1, -64(sp+)
	# rs1 == sp || rs2 == sp (but rs1 != rs2) is valid on no update variants
	lbp	sp, a0, (sp)
	lbp	a0, sp, (sp)
	lbup	sp, a0, (sp)
	lbup	a0, sp, (sp)
	lhp	sp, a0, (sp)
	lhp	a0, sp, (sp)
	lhup	sp, a0, (sp)
	lhup	a0, sp, (sp)
	lwp	sp, a0, (sp)
	lwp	a0, sp, (sp)
	# rs1 == rs2 is valid on stores
	sbp	a0, a0, (sp)
	sbp	a0, a0, (+sp)
	sbp	a0, a0, (sp+)
	shp	a0, a0, (sp)
	shp	a0, a0, (+sp)
	shp	a0, a0, (sp+)
	swp	a0, a0, (sp)
	swp	a0, a0, (+sp)
	swp	a0, a0, (sp+)
