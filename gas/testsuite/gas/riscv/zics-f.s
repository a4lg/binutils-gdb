target:
	## Register-immediate addressing (with pre/post update)
	flh	fa0, (+a1)
	flh	fa0, (a1+)
	flh	fa0, 30(+a1)
	flh	fa0, 30(a1+)
	flh	fa0, -32(+a1)
	flh	fa0, -32(a1+)
	flw	fa0, (+a1)
	flw	fa0, (a1+)
	flw	fa0, 60(+a1)
	flw	fa0, 60(a1+)
	flw	fa0, -64(+a1)
	flw	fa0, -64(a1+)
	fld	fa0, (+a1)
	fld	fa0, (a1+)
	fld	fa0, 120(+a1)
	fld	fa0, 120(a1+)
	fld	fa0, -128(+a1)
	fld	fa0, -128(a1+)
	flq	fa0, (+a1)
	flq	fa0, (a1+)
	flq	fa0, 240(+a1)
	flq	fa0, 240(a1+)
	flq	fa0, -256(+a1)
	flq	fa0, -256(a1+)
	fsh	fa0, (+a1)
	fsh	fa0, (a1+)
	fsh	fa0, 30(+a1)
	fsh	fa0, 30(a1+)
	fsh	fa0, -32(+a1)
	fsh	fa0, -32(a1+)
	fsw	fa0, (+a1)
	fsw	fa0, (a1+)
	fsw	fa0, 60(+a1)
	fsw	fa0, 60(a1+)
	fsw	fa0, -64(+a1)
	fsw	fa0, -64(a1+)
	fsd	fa0, (+a1)
	fsd	fa0, (a1+)
	fsd	fa0, 120(+a1)
	fsd	fa0, 120(a1+)
	fsd	fa0, -128(+a1)
	fsd	fa0, -128(a1+)
	fsq	fa0, (+a1)
	fsq	fa0, (a1+)
	fsq	fa0, 240(+a1)
	fsq	fa0, 240(a1+)
	fsq	fa0, -256(+a1)
	fsq	fa0, -256(a1+)

	## Register-register addressing (with optional pre/post update), non-scaled
	flh	fa0, a2(a1)
	flh	fa0, a2(+a1)
	flh	fa0, a2(a1+)
	flw	fa0, a2(a1)
	flw	fa0, a2(+a1)
	flw	fa0, a2(a1+)
	fld	fa0, a2(a1)
	fld	fa0, a2(+a1)
	fld	fa0, a2(a1+)
	flq	fa0, a2(a1)
	flq	fa0, a2(+a1)
	flq	fa0, a2(a1+)
	fsh	fa0, a2(a1)
	fsh	fa0, a2(+a1)
	fsh	fa0, a2(a1+)
	fsw	fa0, a2(a1)
	fsw	fa0, a2(+a1)
	fsw	fa0, a2(a1+)
	fsd	fa0, a2(a1)
	fsd	fa0, a2(+a1)
	fsd	fa0, a2(a1+)
	fsq	fa0, a2(a1)
	fsq	fa0, a2(+a1)
	fsq	fa0, a2(a1+)

	## Register-register addressing (with optional pre/post update), scaled
	flh	fa0, [a2](a1)
	flh	fa0, [a2](+a1)
	flh	fa0, [a2](a1+)
	flw	fa0, [a2](a1)
	flw	fa0, [a2](+a1)
	flw	fa0, [a2](a1+)
	fld	fa0, [a2](a1)
	fld	fa0, [a2](+a1)
	fld	fa0, [a2](a1+)
	flq	fa0, [a2](a1)
	flq	fa0, [a2](+a1)
	flq	fa0, [a2](a1+)
	fsh	fa0, [a2](a1)
	fsh	fa0, [a2](+a1)
	fsh	fa0, [a2](a1+)
	fsw	fa0, [a2](a1)
	fsw	fa0, [a2](+a1)
	fsw	fa0, [a2](a1+)
	fsd	fa0, [a2](a1)
	fsd	fa0, [a2](+a1)
	fsd	fa0, [a2](a1+)
	fsq	fa0, [a2](a1)
	fsq	fa0, [a2](+a1)
	fsq	fa0, [a2](a1+)

	## Pair load/stores
	flhp	fa0, fa1, (sp)
	flhp	fa0, fa1, (+sp)
	flhp	fa0, fa1, (sp+)
	flhp	fa0, fa1, 30(sp)
	flhp	fa0, fa1, 30(+sp)
	flhp	fa0, fa1, 30(sp+)
	flhp	fa0, fa1, -32(sp)
	flhp	fa0, fa1, -32(+sp)
	flhp	fa0, fa1, -32(sp+)
	flwp	fa0, fa1, (sp)
	flwp	fa0, fa1, (+sp)
	flwp	fa0, fa1, (sp+)
	flwp	fa0, fa1, 60(sp)
	flwp	fa0, fa1, 60(+sp)
	flwp	fa0, fa1, 60(sp+)
	flwp	fa0, fa1, -64(sp)
	flwp	fa0, fa1, -64(+sp)
	flwp	fa0, fa1, -64(sp+)
	fldp	fa0, fa1, (sp)
	fldp	fa0, fa1, (+sp)
	fldp	fa0, fa1, (sp+)
	fldp	fa0, fa1, 120(sp)
	fldp	fa0, fa1, 120(+sp)
	fldp	fa0, fa1, 120(sp+)
	fldp	fa0, fa1, -128(sp)
	fldp	fa0, fa1, -128(+sp)
	fldp	fa0, fa1, -128(sp+)
	flqp	fa0, fa1, (sp)
	flqp	fa0, fa1, (+sp)
	flqp	fa0, fa1, (sp+)
	flqp	fa0, fa1, 240(sp)
	flqp	fa0, fa1, 240(+sp)
	flqp	fa0, fa1, 240(sp+)
	flqp	fa0, fa1, -256(sp)
	flqp	fa0, fa1, -256(+sp)
	flqp	fa0, fa1, -256(sp+)
	fshp	fa0, fa1, (sp)
	fshp	fa0, fa1, (+sp)
	fshp	fa0, fa1, (sp+)
	fshp	fa0, fa1, 30(sp)
	fshp	fa0, fa1, 30(+sp)
	fshp	fa0, fa1, 30(sp+)
	fshp	fa0, fa1, -32(sp)
	fshp	fa0, fa1, -32(+sp)
	fshp	fa0, fa1, -32(sp+)
	fswp	fa0, fa1, (sp)
	fswp	fa0, fa1, (+sp)
	fswp	fa0, fa1, (sp+)
	fswp	fa0, fa1, 60(sp)
	fswp	fa0, fa1, 60(+sp)
	fswp	fa0, fa1, 60(sp+)
	fswp	fa0, fa1, -64(sp)
	fswp	fa0, fa1, -64(+sp)
	fswp	fa0, fa1, -64(sp+)
	fsdp	fa0, fa1, (sp)
	fsdp	fa0, fa1, (+sp)
	fsdp	fa0, fa1, (sp+)
	fsdp	fa0, fa1, 120(sp)
	fsdp	fa0, fa1, 120(+sp)
	fsdp	fa0, fa1, 120(sp+)
	fsdp	fa0, fa1, -128(sp)
	fsdp	fa0, fa1, -128(+sp)
	fsdp	fa0, fa1, -128(sp+)
	fsqp	fa0, fa1, (sp)
	fsqp	fa0, fa1, (+sp)
	fsqp	fa0, fa1, (sp+)
	fsqp	fa0, fa1, 240(sp)
	fsqp	fa0, fa1, 240(+sp)
	fsqp	fa0, fa1, 240(sp+)
	fsqp	fa0, fa1, -256(sp)
	fsqp	fa0, fa1, -256(+sp)
	fsqp	fa0, fa1, -256(sp+)
	# rs1 == rs2 is valid on stores
	fshp	fa0, fa0, (sp)
	fshp	fa0, fa0, (+sp)
	fshp	fa0, fa0, (sp+)
	fswp	fa0, fa0, (sp)
	fswp	fa0, fa0, (+sp)
	fswp	fa0, fa0, (sp+)
	fsdp	fa0, fa0, (sp)
	fsdp	fa0, fa0, (+sp)
	fsdp	fa0, fa0, (sp+)
	fsqp	fa0, fa0, (sp)
	fsqp	fa0, fa0, (+sp)
	fsqp	fa0, fa0, (sp+)
